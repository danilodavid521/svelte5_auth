{
  "id": "8e31db3e-3376-4a78-a93e-7f70d797bd16",
  "prevId": "e0197562-60ee-49f7-96f1-d55d68ddf260",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Public profiles are visible to everyone": {
          "name": "Public profiles are visible to everyone",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ],
          "using": "true"
        },
        "Users can insert their own profile": {
          "name": "Users can insert their own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(SELECT auth.uid()::text) = user_id"
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(SELECT auth.uid()::text) = user_id",
          "withCheck": "(SELECT auth.uid()::text) = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}